// <auto-generated />
using System;
using GBCSporting_X_TEAM.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GBCSporting_X_TEAM.Migrations
{
    [DbContext(typeof(GbcSportingContext))]
    [Migration("20220327183446_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GBCSporting_X_TEAM.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "United States"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "Canada"
                        },
                        new
                        {
                            CountryId = 4,
                            CountryName = "European Union"
                        },
                        new
                        {
                            CountryId = 5,
                            CountryName = "United kingdom"
                        });
                });

            modelBuilder.Entity("GBCSporting_X_TEAM.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("CountryId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "4129 Wines Lane",
                            City = "Houston",
                            CountryId = 1,
                            Email = "e.fortin@hotmail.com",
                            FirstName = "Eleanor",
                            LastName = "Fortin",
                            Phone = "832-261-2126",
                            PostalCode = "77002",
                            State = "TX"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "193 Yorkie Lane",
                            City = "Savannah",
                            CountryId = 1,
                            Email = "m.ely@gmail.com",
                            FirstName = "Matilde",
                            LastName = "Ely",
                            Phone = "912-898-0483",
                            PostalCode = "77002",
                            State = "GA"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "1029 Quiet Valley Lane",
                            City = "Northridge",
                            CountryId = 1,
                            Email = "g.parker@yahoo.com",
                            FirstName = "Gerardo",
                            LastName = "Parker",
                            Phone = "818-882-6074",
                            PostalCode = "91324",
                            State = "CA"
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "3312 Coventry Court",
                            City = "Woodville",
                            CountryId = 1,
                            Email = "d.harrington@aol.com",
                            FirstName = "David",
                            LastName = "Harrington",
                            Phone = "225-874-8694",
                            PostalCode = "39669",
                            State = "LA"
                        },
                        new
                        {
                            CustomerId = 5,
                            Address = "1000 Church Street",
                            City = "Brooklyn",
                            CountryId = 1,
                            Email = "g.collette@proton.com",
                            FirstName = "George",
                            LastName = "Collette",
                            Phone = "843-871-6280",
                            PostalCode = "11238",
                            State = "NY"
                        });
                });

            modelBuilder.Entity("GBCSporting_X_TEAM.Models.Incident", b =>
                {
                    b.Property<int>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncidentId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("TechnicianId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncidentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("Incidents");

                    b.HasData(
                        new
                        {
                            IncidentId = 1,
                            CustomerId = 1,
                            DateClosed = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOpened = new DateTime(2022, 3, 27, 14, 34, 46, 126, DateTimeKind.Local).AddTicks(1929),
                            Description = "The camera works with other software, only the simulator doesnt seem to recogize it.",
                            ProductId = 2,
                            TechnicianId = 5,
                            Title = "Simulator can not find installed camera."
                        },
                        new
                        {
                            IncidentId = 2,
                            CustomerId = 2,
                            DateClosed = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOpened = new DateTime(2022, 3, 27, 14, 34, 46, 126, DateTimeKind.Local).AddTicks(1934),
                            Description = "Freeze occurs when a customer tries to check out with an empty cart.",
                            ProductId = 4,
                            TechnicianId = 2,
                            Title = "Software causes Point of Sale hardware to freeze"
                        },
                        new
                        {
                            IncidentId = 3,
                            CustomerId = 2,
                            DateClosed = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOpened = new DateTime(2022, 3, 27, 14, 34, 46, 126, DateTimeKind.Local).AddTicks(1939),
                            Description = "Software gui glitches for a moment after tickets are purchased.",
                            ProductId = 4,
                            TechnicianId = 3,
                            Title = "Software gui glitches."
                        },
                        new
                        {
                            IncidentId = 4,
                            CustomerId = 4,
                            DateClosed = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOpened = new DateTime(2022, 3, 27, 14, 34, 46, 126, DateTimeKind.Local).AddTicks(1944),
                            Description = "Seems to only occur if the return date is a tuesday.",
                            ProductId = 5,
                            TechnicianId = 1,
                            Title = "Software does not always send out rental return reminders"
                        },
                        new
                        {
                            IncidentId = 5,
                            CustomerId = 4,
                            DateClosed = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOpened = new DateTime(2022, 3, 27, 14, 34, 46, 126, DateTimeKind.Local).AddTicks(1949),
                            Description = "If an item is scanned as returned some times it does appear in the pool and has to be re-added manually.",
                            ProductId = 5,
                            TechnicianId = 1,
                            Title = "Software sometimes does not add returned item to available item pool automatically"
                        });
                });

            modelBuilder.Entity("GBCSporting_X_TEAM.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Code = "vsg-001",
                            Name = "Driving Range Scheduler",
                            Price = 30.989999999999998,
                            ReleaseDate = new DateTime(2009, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductId = 2,
                            Code = "vsg-002",
                            Name = "Swing Simulator 2077",
                            Price = 79.989999999999995,
                            ReleaseDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductId = 3,
                            Code = "fsp-001",
                            Name = "Quick Serve Legacy POS",
                            Price = 159.99000000000001,
                            ReleaseDate = new DateTime(2005, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductId = 4,
                            Code = "fsp-002",
                            Name = "Quick Serve - SaaS POS",
                            Price = 59.990000000000002,
                            ReleaseDate = new DateTime(2018, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductId = 5,
                            Code = "rsp-001",
                            Name = "Falcon Rental Manager",
                            Price = 109.98999999999999,
                            ReleaseDate = new DateTime(2017, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GBCSporting_X_TEAM.Models.Technician", b =>
                {
                    b.Property<int>("TechnicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechnicianId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnicianId");

                    b.ToTable("Technicians");

                    b.HasData(
                        new
                        {
                            TechnicianId = 1,
                            Email = "g.akron@gbcsport.com",
                            Name = "George Akron",
                            Phone = "332-974-2398"
                        },
                        new
                        {
                            TechnicianId = 2,
                            Email = "k.pickrell@gbcsport.com",
                            Name = "Kevin Pickrell",
                            Phone = "510-367-5104"
                        },
                        new
                        {
                            TechnicianId = 3,
                            Email = "e.bishop@gbcsport.com",
                            Name = "Elizabeth Bishop",
                            Phone = "718-340-3265"
                        },
                        new
                        {
                            TechnicianId = 4,
                            Email = "j.stephens@gbcsport.com",
                            Name = "Jeanne Stephens",
                            Phone = "732-519-3152"
                        },
                        new
                        {
                            TechnicianId = 5,
                            Email = "d.Michael@gbcsport.com",
                            Name = "Michael Day",
                            Phone = "518-200-4074"
                        });
                });

            modelBuilder.Entity("GBCSporting_X_TEAM.Models.Customer", b =>
                {
                    b.HasOne("GBCSporting_X_TEAM.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("GBCSporting_X_TEAM.Models.Incident", b =>
                {
                    b.HasOne("GBCSporting_X_TEAM.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting_X_TEAM.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting_X_TEAM.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianId");

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Technician");
                });
#pragma warning restore 612, 618
        }
    }
}
